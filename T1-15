#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <stdbool.h>

/* run this program using the console pauser or add your own getch, system("pause") or input loop */
bool isvalueinarray(int val, int *arr, int size);

int main(int argc, char** argv) {
	int task_num;
	printf("Enter the task number: \n");
	scanf("%d", &task_num);
    
	if(task_num==1)
	{
		int a[5][6];
	    int b[6];
	    int c[5];
	
	    printf("Vvedite matricu: \n");
	    for(int i=0;i<5;i++)
	    {
	        for (int j=0;j<6;j++)
	        {
	        	printf("a[%d, %d] = ", i, j);
	        	scanf("%d", &a[i][j]);
		    }
	    }
	    printf("Dana matrica: \n");
	    for(int i=0;i<5;i++)
	    {
		    for(int j=0;j<6;j++)
		    {
			    printf("%d ", a[i][j]);
			    if(j==5)
			        printf("\n");
		    }
	    }
	    for(int j=0;j<6;j++)
	    {
		    int max=0;
		    for(int i=0;i<5;i++)
		    {
			    if(abs(a[i][j])>abs(max))
			    {
				    max=a[i][j];
			    }
		    }
		    b[j]=max;
	    }
	    printf("Poluchena matrica: \n");
	    for(int j=0;j<6;j++)
	    {
		    printf("%d ", b[j]);
		    if(j==5)
			    printf("\n");		
	    }
	    for(int i=0;i<5;i++)
	    {
		    int max=0;
		    for(int j=0;j<6;j++)
	    	{
		    	if(abs(a[i][j])>abs(max))
		    	{
			    	max=a[i][j];
			    }
		    }
		    c[i]=max;
	    }
	    printf("Poluchena matrica: \n");
	    for(int i=0;i<5;i++)
	    {
		    printf("%d ", c[i]);
		    if(i==4)
			    printf("\n");		
	    }	        
	}
	else if (task_num==2)
	{
		int a[5][6];
	    int b[6];
	    int c[5];
	
	    printf("Vvedite matricu: \n");
	    for(int i=0;i<5;i++)
	    {
	        for (int j=0;j<6;j++)
	        {
	    	    printf("a[%d, %d] = ", i, j);
	    	    scanf("%d", &a[i][j]);
		    }
	    }
	    printf("Dana matrica: \n");
	    for(int i=0;i<5;i++)
	    {
		    for(int j=0;j<6;j++)
		    {
			    printf("%d ", a[i][j]);
			    if(j==5)
			        printf("\n");
		    }
		}
	    for(int j=0;j<6;j++)
	    {
		    for(int i=0;i<5;i++)
		    {
			    if(a[i][j]%2==0)
			    {
				    b[j]=a[i][j];
				    break;
			    }
			    else
			        b[j]=0;
		    }		
	    }
	    printf("Poluchena matrica: \n");
	    for(int j=0;j<6;j++)
	    {
		    printf("%d ", b[j]);
		    if(j==5)
			    printf("\n");		
	    }
	    for(int i=0;i<5;i++)
	    {
		    for(int j=0;j<6;j++)
		    {
			    if(a[i][j]%2==0)
			    {
				    c[i]=a[i][j];
				    break;
			    }
			    else
			        c[i]=0;
		    }
	    }
	    printf("Poluchena matrica: \n");
	    for(int i=0;i<5;i++)
	    {
		    printf("%d ", c[i]);
		    if(i==4)
			    printf("\n");		
	    }	        
	}
	else if (task_num==3)
	{
		int a[5][6];
	    int b[6];
	    int c[5];
	    int N=5;
	    int M=6;
	
	
	    printf("Vvedite matricu: \n");
	    for(int i=0;i<5;i++)
	    {
	        for (int j=0;j<6;j++)
	        {
	    	    printf("a[%d, %d] = ", i, j);
	    	    scanf("%d", &a[i][j]);
		    }
	    }
	    printf("Dana matrica: \n");
	    for(int i=0;i<5;i++)
	    {
		    for(int j=0;j<6;j++)
		    {
			    printf("%d ", a[i][j]);
			    if(j==5)
			        printf("\n");
		    }
	    }
		for(int j=0;j<6;j++)
	    {
		    int count1=0;
		    for(int i=0;i<5;i++)
		    {
			    if(a[i][j]>N)
			    {
			    	count1++;
			    }
		    }
		    b[j]=count1;
	    }
	    printf("Poluchena matrica: \n");
	    for(int j=0;j<6;j++)
	    {
	    	printf("%d ", b[j]);
	    	if(j==5)
		    	printf("\n");		
	    }
	    for(int i=0;i<5;i++)
	    {
	    	int count2=0;
	    	for(int j=0;j<6;j++)
	    	{
		    	if(a[i][j]>M)
			    {
				    count2++;
			    }
		    }
		    c[i]=count2;
	    }
	    printf("Poluchena matrica: \n");
	    for(int i=0;i<5;i++)
	    {
	    	printf("%d ", c[i]);
	    	if(i==4)
		    	printf("\n");		
	    }	        
	}
	else if (task_num==4)
	{
		int a[5][6];
	    int b[30];
	    int c[30];
	    int d[30];
	
	    printf("Vvedite matricu: \n");
	    for(int i=0;i<5;i++)
	    {
	        for (int j=0;j<6;j++)
	        {
	        	printf("a[%d, %d] = ", i, j);
	        	scanf("%d", &a[i][j]);
		    }
	    }
    	printf("Dana matrica: \n");
    	for(int i=0;i<5;i++)
    	{
	    	for(int j=0;j<6;j++)
	    	{
		    	printf("%d ", a[i][j]);
		    	if(j==5)
			        printf("\n");
	      	}
	    }
	    int k=0;
	    for(int j=0;j<6;j++)
     	{
		    for(int i=0;i<5;i++)
		    {
		    	if(a[i][j]%3==0)
		    	{
			    	b[k]=a[i][j];
			    	k++;
		    	}
	    	}		
	    }
	    if (k==0)
	        printf("No elements is multiple of 3");
	    printf("Poluchena matrica: \n");
    	for(int i=0;i<k;i++)
    	{
	    	printf("%d ", b[i]);
	    	if(i==k-1)
		    	printf("\n");		
	    }
	    int l=0;
    	int m=0;
    	for(int i=0;i<5;i++)
    	{
	    	for(int j=0;j<6;j++)
	    	{
		    	if(a[i][j]>0)
		    	{
			    	c[l]=a[i][j];
			    	l++;
		    	}
		    	else
		    	{
			    	d[m]=a[i][j];
			    	m++;
			    }
		    }		
	    }
	    printf("Polucheny matricy: \n");
	    for(int i=0;i<l;i++)
    	{
	    	printf("%d ", c[i]);
	    	if(i==l-1)
		    	printf("\n");		
	    }
    	for(int i=0;i<m;i++)
    	{
	    	printf("%d ", d[i]);
	    	if(i==m-1)
	    		printf("\n");		
		}	        	        
	}
	else if (task_num==5)
	{
		int len;
		puts("Enter maximum number of elements: ");
		scanf("%d", &len);
		int *p=NULL;
		p=(int *)calloc(len, sizeof(int));
		if (p == NULL)
		{
			printf("Pamyat' ne vydelena");
			exit(EXIT_FAILURE);
		}
		else
		{
			int i=0;
			int number=0;
		
			printf("Enter elements: \n");
			while (i < len && scanf("%d", &p[i]) == 1)
				i++;

			printf("Enter %d elements: \n", number = i);

			printf("\n-------------------\n");
			for (i = 0; i < number; i++)
			{
				printf("%d \n", p[i]);
			}
			int sum=0;
			for (i=1; i < number; i+=2)
			{
				sum+=p[i];
			}
			printf("Sum of even elements of array: %d", sum);
		}
		free(p);
	}
	else if (task_num==6)
	{
		int len;
		puts("Enter maximum number of elements: ");
		scanf("%d", &len);
		float *p=NULL;
		p=(float *)calloc(len, sizeof(float));
		if (p == NULL)
		{
			printf("Pamyat' ne vydelena");
			exit(EXIT_FAILURE);
		}
		else
		{
			int i=0;
			int number=0;
		
			printf("Enter elements: \n");
			while (i < len && scanf("%f", &p[i]) == 1)
				i++;

			printf("Enter %d elements: \n", number = i);

			printf("\n-------------------\n");
			for (i = 0; i < number; i++)
			{
				printf("%f \n", p[i]);
			}
			int count=0;
			for (i=0; i < number; i++)
			{
				if(p[i]<0)
				    count++;
			}
			printf("Number of negative elements in array: %d", count);
		}
		free(p);		
	}
	else if (task_num==7)
	{
			int len;
		puts("Enter maximum number of elements: ");
		scanf("%d", &len);
		float *p=NULL;
		p=(float *)calloc(len, sizeof(float));
		if (p == NULL)
		{
			printf("Pamyat' ne vydelena");
			exit(EXIT_FAILURE);
		}
		else
		{
			int i=0;
			int number=0;
		
			printf("Enter elements: \n");
			while (i < len && scanf("%f", &p[i]) == 1)
				i++;

			printf("Enter %d elements: \n", number = i);

			printf("\n-------------------\n");
			for (i = 0; i < number; i++)
			{
				printf("%f \n", p[i]);
			}
			float P=1;
			for (i=0; i < number; i++)
			{
				if(abs(p[i])<7)
				    P*=p[i];
			}
			printf("Product of elements which modulus is less than 7: %f", P);
		}		
		free(p);
	}
	else if(task_num=8)
	{
		int len;
		puts("Enter maximum number of elements: ");
		scanf("%d", &len);
		float *p=NULL;
		p=(float *)calloc(len, sizeof(float));
		if (p == NULL)
		{
			printf("Pamyat' ne vydelena");
			exit(EXIT_FAILURE);
		}
		else
		{
			int i=0;
			int number=0;
		
			printf("Enter elements: \n");
			while (i < len && scanf("%f", &p[i]) == 1)
				i++;

			printf("Enter %d elements: \n", number = i);

			printf("\n-------------------\n");
			for (i = 0; i < number; i++)
			{
				printf("%f \n", p[i]);
			}
			float max=p[0];
			for (i=0; i < number; i++)
			{
				if(p[i]>max)
				    max=p[i];
			}
			printf("Maximum element of array: %f", max);
		}
		free(p);	
	}
	else if (task_num==9)
	{
		int len;
		puts("Enter maximum number of elements: ");
		scanf("%d", &len);
		int *p=NULL;
		p=(int *)calloc(len, sizeof(int));
		if (p == NULL)
		{
			printf("Pamyat' ne vydelena");
			exit(EXIT_FAILURE);
		}
		else
		{
			int i=0;
			int number=0;
		
			printf("Enter elements: \n");
			while (i < len && scanf("%d", &p[i]) == 1)
				i++;

			printf("Enter %d elements: \n", number = i);

			printf("\n-------------------\n");
			for (i = 0; i < number; i++)
			{
				printf("%d \n", p[i]);
			}
			int min=p[0];
			for (i=0; i < number; i++)
			{
				if(p[i]<min)
			 	    min=p[i];
			}
			printf("Minimum element of array: %d", min);
		}
		free(p);
	}
	else if (task_num==10)
	{
		int len;
		puts("Enter maximum number of elements: ");
		scanf("%d", &len);
		float *p=NULL;
		p=(float *)calloc(len, sizeof(float));
		if (p == NULL)
		{
			printf("Pamyat' ne vydelena");
			exit(EXIT_FAILURE);
		}
		else
		{
			int i=0;
			int number=0;
		
			printf("Enter elements: \n");
			while (i < len && scanf("%f", &p[i]) == 1)
				i++;

			printf("Enter %d elements: \n", number = i);

			printf("\n-------------------\n");
			for (i = 0; i < number; i++)
			{
				printf("%f \n", p[i]);
			}
			float avg=0;
			float sum=0;
			for (i=0; i < number; i++)
			{
				sum+=p[i];
			}
			avg=sum/number;
			printf("Average of array: %f", avg);
		}		
		free(p);
	}
	else if (task_num==11)
	{
		int len;
		puts("Enter maximum number of elements: ");
		scanf("%d", &len);
		float *p=NULL;
		p=(float *)calloc(len, sizeof(float));
		if (p == NULL)
		{
			printf("Pamyat' ne vydelena");
			exit(EXIT_FAILURE);
		}
		else
		{
			int i=0;
			int number=0;
		
			printf("Enter elements: \n");
			while (i < len && scanf("%f", &p[i]) == 1)
				i++;

			printf("Enter %d elements: \n", number = i);

			printf("\n-------------------\n");
			for (i = 0; i < number; i++)
			{
				printf("%f \n", p[i]);
			}
			int count=0;
			for (i=0; i < number; i++)
			{
				if(p[i]>=0)
				    count++;
			}
			printf("Number of non-negative elemets: %d", count);
		}		
		free(p);
	}
	else if (task_num=12)
	{
		int len;
		puts("Enter maximum number of elements: ");
		scanf("%d", &len);
		float *p=NULL;
		p=(float *)calloc(len, sizeof(float));
		if (p == NULL)
		{
			printf("Pamyat' ne vydelena");
			exit(EXIT_FAILURE);
		}
		else
		{
			int i=0;
			int number=0;
		
			printf("Enter elements: \n");
			while (i < len && scanf("%f", &p[i]) == 1)
				i++;

			printf("Enter %d elements: \n", number = i);

			printf("\n-------------------\n");
			for (i = 0; i < number; i++)
			{
				printf("%f \n", p[i]);
			}
			int lastnegative=number-1;
			for (i=number-1; i >=0; i--)
			{
				if(p[i]<0)
				{
				    lastnegative=i;
				    break;
				}			
			}
			printf("Index of last negative element in array: %d", lastnegative);
		}		
		free (p);
	}
	else if (task_num==13)
	{
		int len;
		puts("Enter maximum number of elements: ");
		scanf("%d", &len);
		int *p=NULL;
		p=(int *)calloc(len, sizeof(int));
		if (p == NULL)
		{
			printf("Pamyat' ne vydelena");
			exit(EXIT_FAILURE);
		}
		else
		{
			int i=0;
			int number=0;
		
			printf("Enter elements: \n");
			while (i < len && scanf("%d", &p[i]) == 1)
				i++;

			printf("Enter %d elements: \n", number = i);

			printf("\n-------------------\n");
			for (i = 0; i < number; i++)
			{
				printf("%d \n", p[i]);
			}
			int max, min;
			int sum=0;
			max=p[0];
			min=p[0];
			for (i=1; i < number; i++)
			{
				if(p[i]>max)
					max=p[i];
				else if(p[i]<min)
				    min=p[i];
			}
			sum=max+min;
			printf("Sum of maximum and minimum elements of array: %d", sum);
		}		
		free(p);
	}
	else if (task_num==14)
	{
		int len;
		puts("Enter maximum number of elements: ");
		scanf("%d", &len);
		float *p=NULL;
		p=(float *)calloc(len, sizeof(float));
		if (p == NULL)
		{
			printf("Pamyat' ne vydelena");
			exit(EXIT_FAILURE);
		}
		else
		{
			int i=0;
			int number=0;
		
			printf("Enter elements: \n");
			while (i < len && scanf("%f", &p[i]) == 1)
				i++;

			printf("Enter %f elements: \n", number = i);

			printf("\n-------------------\n");
			for (i = 0; i < number; i++)
			{
				printf("%f \n", p[i]);
			}
			float max, min;
			float product=1;
			max=p[0];
			min=p[0];
			for (i=0; i < number; i++)
			{
				if(p[i]>max)
			 	   max=p[i];
				else if(p[i]<min)
			 	   min=p[i];
			}
			product=max*min;
			printf("Product of maximum and minimum elements of array: %f", product);
		}		
		free(p);
	}
	else if (task_num==15)
	{
		int len;
		puts("Enter maximum number of elements: ");
		scanf("%d", &len);
		int *p=NULL;
		p=(int *)calloc(len, sizeof(int));
		if (p == NULL)
		{
			printf("Pamyat' ne vydelena");
			exit(EXIT_FAILURE);
		}
		else
		{
			int i=0;
			int number=0;
		
			printf("Enter elements: \n");
			while (i < len && scanf("%d", &p[i]) == 1)
				i++;

			printf("Enter %d elements: \n", number = i);

			printf("\n-------------------\n");
			for (i = 0; i < number; i++)
			{
				printf("%d \n", p[i]);
			}
		
			if(isvalueinarray(20, p, number))
			    printf ("There is number 20 in array");
			else
			    printf ("There is no number 20 in array");
		
		}		
		free(p);
	}
	return 0;
}

bool isvalueinarray(int val, int *arr, int size){
    int i;
    for (i=0; i < size; i++) {
        if (arr[i] == val)
            return true;
    }
    return false;	
}
